{"version":3,"sources":["components/SunriseSunset.js","components/TempHumidityPressure.js","components/City.js","components/Weather.js","components/Forecast.js","hooks/useWeather.js","components/Map.js","containers/WeatherContainer.js","components/SearchBar.js","App.js","index.js"],"names":["useStyles","makeStyles","content","display","flexDirection","alignItems","height","icon","justifyContent","width","marginRight","text","fontSize","flex","color","sunrise","backgroundColor","sunset","SunriseSunset","classes","Card","CardContent","className","Typography","info","variant","component","faSun","dayjs","unix","format","faMoon","theme","breakpoints","down","temp","marginBottom","secondaryText","TempHumidityPressure","humidity","pressure","faThermometerHalf","faTint","faArrowDown","city","City","name","coord","todayDate","Date","toDateString","lon","lat","Weather","sun","Grid","item","xs","md","container","up","title","canvas","maxWidth","Forecast","chartCanvas","forecast","useEffect","Chart","type","options","legend","responsive","scales","yAxes","ticks","suggestedMin","gridLines","xAxes","stacked","data","labels","Object","keys","datasets","label","values","minTemp","ref","node","mapForecast","weatherData","tempByDay","minTempByDay","matchDate","list","forEach","today","toString","split","dateKey","dt_txt","match","push","main","temp_min","getExtremeTemp","obj","extreme","day","Math","useWeather","value","useState","weather","setWeather","setForecast","isLoading","setIsLoading","isError","setIsError","a","fetch","process","res","json","then","fetchForecast","catch","err","fetchWeather","map","Map","L","center","zoom","layers","tileLayer","attribution","marker","invalidateSize","dragging","disable","id","borderRadius","padding","marginTop","infoText","textAlign","WeatherContainer","spacing","sys","toolbar","search","position","shape","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","SearchBar","onKeyDown","setCity","AppBar","Toolbar","InputBase","input","inputProps","onChange","e","target","App","key","preventDefault","onEnterClick","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.468e3e87.chunk.js","sourcesContent":["import { faMoon, faSun } from '@fortawesome/free-solid-svg-icons'\nimport dayjs from 'dayjs'\nimport React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: 150\n  },\n  icon: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: 35,\n    marginRight: 4\n  },\n  text: {\n    fontSize: '1.3rem',\n    flex: 1,\n    color: 'white',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  sunrise: {\n    backgroundColor: '#FF8100'\n  },\n  sunset: {\n    backgroundColor: '#6A0D83'\n  }\n})\n\nconst SunriseSunset = ({ sunrise, sunset }) => {\n  const classes = useStyles()\n\n  return (\n    <Card>\n      <CardContent className={classes.content}>\n        <Typography\n          className={`${classes.info} ${classes.text} ${classes.sunrise}`}\n          variant=\"h3\"\n          component=\"h3\"\n        >\n          <div className={classes.icon}>\n            <FontAwesomeIcon icon={faSun} />\n          </div>\n          Sunrise: {dayjs.unix(sunrise).format('HH:mm')}\n        </Typography>\n        <Typography\n          className={`${classes.info} ${classes.text} ${classes.sunset}`}\n          variant=\"h3\"\n          component=\"h3\"\n        >\n          <div className={classes.icon}>\n            <FontAwesomeIcon icon={faMoon} />\n          </div>\n          Sunset: {dayjs.unix(sunset).format('HH:mm')}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nSunriseSunset.propTypes = {\n  sunrise: PropTypes.number.isRequired,\n  sunset: PropTypes.number.isRequired\n}\n\nexport default SunriseSunset\n","import React from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  faArrowDown,\n  faThermometerHalf,\n  faTint\n} from '@fortawesome/free-solid-svg-icons'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    height: 150,\n    [theme.breakpoints.down('sm')]: {\n      height: 100\n    }\n  },\n  icon: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: 35,\n    marginRight: 4\n  },\n  info: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  temp: {\n    marginBottom: 8,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '2rem'\n    }\n  },\n  secondaryText: {\n    fontSize: '1.3rem',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '1.1rem'\n    }\n  }\n}))\n\nconst TempHumidityPressure = ({ temp, humidity, pressure }) => {\n  const classes = useStyles()\n  return (\n    <Card>\n      <CardContent className={classes.content}>\n        <Typography\n          className={`${classes.temp} ${classes.info}`}\n          variant=\"h3\"\n          component=\"h3\"\n        >\n          <div className={classes.icon}>\n            <FontAwesomeIcon icon={faThermometerHalf} />\n          </div>\n          {temp} °C\n        </Typography>\n        <Typography\n          className={`${classes.info} ${classes.secondaryText}`}\n          variant=\"h5\"\n          component=\"h5\"\n        >\n          <div className={classes.icon}>\n            <FontAwesomeIcon icon={faTint} />\n          </div>\n          Humidity: {humidity} %\n        </Typography>\n        <Typography\n          className={`${classes.info} ${classes.secondaryText}`}\n          variant=\"h5\"\n          component=\"h5\"\n        >\n          <div className={classes.icon}>\n            <FontAwesomeIcon icon={faArrowDown} />\n          </div>\n          Pressure: {pressure} hPa\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nTempHumidityPressure.propTypes = {\n  temp: PropTypes.number.isRequired,\n  humidity: PropTypes.number.isRequired,\n  pressure: PropTypes.number.isRequired\n}\n\nexport default TempHumidityPressure\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    height: 150,\n    [theme.breakpoints.down('sm')]: {\n      height: 100\n    }\n  },\n  icon: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: 35,\n    marginRight: 4\n  },\n  info: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  city: {\n    marginBottom: 8,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '2rem'\n    }\n  },\n  secondaryText: {\n    fontSize: '1.3rem',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '1.1rem'\n    }\n  }\n}))\n\nconst City = ({ name, coord }) => {\n  const classes = useStyles()\n  const todayDate = new Date().toDateString()\n\n  return (\n    <Card>\n      <CardContent className={classes.content}>\n        <Typography\n          className={`${classes.city} ${classes.info}`}\n          variant=\"h3\"\n          component=\"h3\"\n        >\n          {name}\n        </Typography>\n        <Typography\n          className={`${classes.info} ${classes.secondaryText}`}\n          variant=\"h5\"\n          component=\"h5\"\n        >\n          lng: {coord.lon} lat: {coord.lat}\n        </Typography>\n        <Typography\n          className={`${classes.info} ${classes.secondaryText}`}\n          variant=\"h5\"\n          component=\"h5\"\n        >\n          {todayDate}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nCity.propTypes = {\n  name: PropTypes.string.isRequired,\n  coord: PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    lon: PropTypes.number.isRequired\n  }).isRequired\n}\n\nexport default City\n","import React from 'react'\nimport SunriseSunset from './SunriseSunset'\nimport TempHumidityPressure from './TempHumidityPressure'\nimport City from './City'\nimport Grid from '@material-ui/core/Grid'\nimport PropTypes from 'prop-types'\n\nconst Weather = ({ city, coord, temp, humidity, pressure, sun }) => {\n  return (\n    <>\n      <Grid item xs={12} md={4}>\n        <City name={city} coord={coord} />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <TempHumidityPressure\n          temp={temp}\n          humidity={humidity}\n          pressure={pressure}\n        />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <SunriseSunset sunrise={sun.sunrise} sunset={sun.sunset} />\n      </Grid>\n    </>\n  )\n}\n\nWeather.propTypes = {\n  city: PropTypes.string.isRequired,\n  coord: PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    lon: PropTypes.number.isRequired\n  }),\n  temp: PropTypes.number.isRequired,\n  humidity: PropTypes.number.isRequired,\n  pressure: PropTypes.number.isRequired,\n  sun: PropTypes.shape({\n    sunrise: PropTypes.number.isRequired,\n    sunset: PropTypes.number.isRequired\n  }).isRequired\n}\n\nexport default Weather\n","import React, { useEffect } from 'react'\nimport Chart from 'chart.js'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    [theme.breakpoints.up('md')]: {\n      height: 400\n    }\n  },\n  title: {\n    marginBottom: 16\n  },\n  canvas: {\n    maxWidth: '100%'\n  }\n}))\n\nconst Forecast = ({ forecast }) => {\n  const classes = useStyles()\n  let chartCanvas\n\n  useEffect(() => {\n    const setChart = () => {\n      return new Chart(chartCanvas, {\n        type: 'bar',\n        options: {\n          legend: {\n            display: false\n          },\n          responsive: true,\n          scales: {\n            yAxes: [\n              {\n                display: true,\n                ticks: {\n                  suggestedMin: 0\n                },\n                gridLines: {\n                  display: false\n                }\n              }\n            ],\n            xAxes: [\n              {\n                stacked: true,\n                gridLines: {\n                  display: false\n                }\n              }\n            ]\n          }\n        },\n        data: {\n          labels: Object.keys(forecast.temp),\n          datasets: [\n            {\n              label: '',\n              data: Object.values(forecast.minTemp),\n              backgroundColor: '#4c9bc4'\n            },\n            {\n              label: '',\n              data: Object.values(forecast.temp),\n              backgroundColor: '#fac76c'\n            }\n          ]\n        }\n      })\n    }\n\n    setChart()\n  }, [chartCanvas, forecast])\n\n  return (\n    <Card>\n      <CardContent className={classes.container}>\n        <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n          Forecast\n        </Typography>\n        <canvas className={classes.canvas} ref={node => (chartCanvas = node)} />\n      </CardContent>\n    </Card>\n  )\n}\n\nForecast.propTypes = {\n  forecast: PropTypes.object\n}\n\nexport default Forecast\n","import { useState, useEffect } from 'react'\n\nfunction mapForecast(weatherData) {\n  const tempByDay = {}\n  const minTempByDay = {}\n  const matchDate = /^\\d{4}-\\d*-\\d*/g\n\n  if (weatherData.city) {\n    weatherData.list.forEach(forecast => {\n      const today = new Date().toString().split(' ')[0]\n      const dateKey = new Date(forecast.dt_txt.match(matchDate))\n        .toString()\n        .split(' ')[0]\n\n      switch (true) {\n        case dateKey === today:\n          break\n        case dateKey in tempByDay:\n          tempByDay[dateKey].push(forecast.main.temp)\n          minTempByDay[dateKey].push(forecast.main.temp_min)\n          break\n        default:\n          tempByDay[dateKey] = [forecast.main.temp]\n          minTempByDay[dateKey] = [forecast.main.temp_min]\n          break\n      }\n    })\n  }\n\n  return {\n    temp: getExtremeTemp(tempByDay, 'max'),\n    minTemp: getExtremeTemp(minTempByDay, 'min')\n  }\n}\n\nfunction getExtremeTemp(obj, extreme) {\n  Object.keys(obj).forEach(day => {\n    obj[day] = Math[extreme](...obj[day])\n  })\n\n  return obj\n}\n\nfunction useWeather(value) {\n  const [weather, setWeather] = useState('')\n  const [forecast, setForecast] = useState('')\n  const [isLoading, setIsLoading] = useState(true)\n  const [isError, setIsError] = useState(false)\n\n  useEffect(() => {\n    async function fetchWeather() {\n      const res = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${value}&units=metric&APPID=${process.env.REACT_APP_OPEN_WEATHER_KEY}`\n      )\n      setIsLoading(true)\n      res\n        .json()\n        .then(res => {\n          setWeather(res)\n        })\n        .then(() => {\n          fetchForecast(value)\n        })\n        .catch(err => {\n          setIsError(true)\n          throw err\n        })\n    }\n\n    async function fetchForecast(value = 'Szczecin') {\n      const res = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${value}&units=metric&APPID=${process.env.REACT_APP_OPEN_WEATHER_KEY}`\n      )\n      res\n        .json()\n        .then(res => {\n          setForecast(mapForecast(res))\n          setIsLoading(false)\n        })\n        .catch(err => {\n          setIsError(true)\n          throw err\n        })\n    }\n\n    fetchWeather()\n  }, [value])\n\n  return { weather, forecast, isLoading, isError }\n}\n\nexport default useWeather\n","import React, { useEffect } from 'react'\nimport L from 'leaflet'\nimport { Card, CardContent, makeStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: 400,\n    [theme.breakpoints.down('sm')]: {\n      height: 160\n    }\n  },\n  map: {\n    width: '100%',\n    height: '100%'\n  }\n}))\n\nconst Map = ({ lat, lon }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    L.map('map', {\n      center: [lat, lon],\n      zoom: 10,\n      layers: [\n        L.tileLayer(\n          'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png',\n          {\n            attribution:\n              '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          }\n        ),\n        L.marker([lat, lon])\n      ]\n    })\n      .invalidateSize(true)\n      .dragging.disable()\n  }, [lat, lon])\n\n  return (\n    <Card>\n      <CardContent className={classes.container}>\n        <div className={classes.map} id=\"map\"></div>\n      </CardContent>\n    </Card>\n  )\n}\n\nMap.propTypes = {\n  lat: PropTypes.number.isRequired,\n  lon: PropTypes.number.isRequired\n}\n\nexport default Map\n","import React from 'react'\nimport Weather from '../components/Weather'\nimport Forecast from '../components/Forecast'\nimport useWeather from '../hooks/useWeather'\nimport Grid from '@material-ui/core/Grid'\nimport Map from '../components/Map'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    backgroundColor: '#e5e5e5',\n    borderRadius: '1rem',\n    padding: '2rem',\n    marginTop: '6rem',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '4rem'\n    }\n  },\n  infoText: {\n    color: 'white',\n    textAlign: 'center'\n  }\n}))\n\nconst WeatherContainer = ({ city }) => {\n  const { weather, forecast, isLoading, isError } = useWeather(city)\n  const classes = useStyles()\n\n  const WeatherAndForecast = () => {\n    return (\n      <>\n        {!isError && forecast.temp && weather.main ? (\n          <Grid container spacing={2}>\n            <Weather\n              city={weather.name}\n              coord={weather.coord}\n              temp={weather.main.temp}\n              humidity={weather.main.humidity}\n              pressure={weather.main.pressure}\n              sun={weather.sys}\n            />\n            <Grid item xs={12} md={8}>\n              <Forecast forecast={forecast} />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Map lat={weather.coord.lat} lon={weather.coord.lon} />\n            </Grid>\n          </Grid>\n        ) : (\n          <h4 className={classes.infoText}>Cant find results for '{city}'</h4>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className={classes.container}>\n        {isLoading ? (\n          <h4 className={classes.infoText}>Loading....</h4>\n        ) : (\n          <WeatherAndForecast />\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default WeatherContainer\n","import React, { useState } from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { fade, InputBase, makeStyles } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 220,\n      '&:focus': {\n        width: 280\n      }\n    }\n  }\n}))\n\nconst SearchBar = ({ onKeyDown, value }) => {\n  const [city, setCity] = useState(value)\n  const classes = useStyles()\n\n  return (\n    <AppBar>\n      <Toolbar className={classes.toolbar}>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            classes={{\n              input: classes.inputInput\n            }}\n            value={city}\n            inputProps={{ 'aria-label': 'search' }}\n            onChange={e => setCity(e.target.value)}\n            onKeyDown={onKeyDown}\n          />\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nSearchBar.propTypes = {\n  onKeyDown: PropTypes.func,\n  value: PropTypes.string\n}\n\nexport default SearchBar\n","import React, { useState } from 'react'\nimport WeatherContainer from './containers/WeatherContainer'\nimport { Container } from '@material-ui/core'\nimport SearchBar from './components/SearchBar'\n\nfunction App() {\n  const [city, setCity] = useState('Szczecin')\n\n  function onEnterClick(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault()\n      setCity(e.target.value)\n    }\n  }\n  return (\n    <>\n      <SearchBar value={city} onKeyDown={e => onEnterClick(e)} />\n      <Container maxWidth=\"lg\">\n        <WeatherContainer city={city} />\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}